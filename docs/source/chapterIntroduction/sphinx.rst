Building the Automatic Documentation with Sphinx
------------------------------------------------

Building the sphinx-apidoc automatic documentation is 
extremely tedious. While it seems to be the obvious solution
to document code properly, it requires a bunch of intricate 
steps that have to followed. 

#. First of all, every package has to be be auto-documented
   for itself. Meaning, within the makefile every package 
   has it's own line. and the previous section has to be 
   removed because apidoc does not seem to recognize change 
   itself. The lines look as follows:

   ::

        docs:
            make clean -C docs
            make clean -C docs/source/autogenerated
            sphinx-apidoc -o ./docs/source/autogenerated/src ./src [*.rst *.npy]
            sphinx-apidoc -o ./docs/source/autogenerated/tests ./tests [*.rst *.npy]
            sphinx-apidoc -o ./docs/source/autogenerated/input ./input [*.rst *.npy]
            sphinx-apidoc -o ./docs/source/autogenerated/scripts ./scripts [*.rst *.npy]
            sphinx-apidoc -o ./docs/source/autogenerated/<yournewpackage> ./<yournewpackage> [*.rst *.npy]
            make html -C docs
        
   First, remaining compiled documenation is deleted. Then, the autogenerated files are 
   deleted. After both of these steps. ``sphinx-apidoc`` is run to autogenerate 
   documenation files for each of packages contained in the repositories, i.e.,
   ``src``, ``tests``, ``input`` and ``scripts``, as shown in the code sample above.
   More packages will have to be added in a similar fashion to
   automatically create the ``.rst`` documentation (see <yournewpackage>)
   Before the last step (make html -C docs) can be run with a new package, another 
   line has to be added to the source ``docs/source/chapterModules/modules.rst`` file,
   which looks like the following.

   ::

        Modules
        +++++++++++++++++++++++++++++++

        .. toctree::

            ../autogenerated/input/modules.rst
            ../autogenerated/src/modules.rst
            ../autogenerated/tests/modules.rst
            ../autogenerated/scripts/modules.rst
            ../autogenerated/<yournewpackage>/modules.rst

   After adding a line such as ``../autogenerated/<yournewpackage>/modules.rst``,
   the new package will be automatically documented.
   